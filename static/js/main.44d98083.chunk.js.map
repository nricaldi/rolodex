{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-bar/search-bar.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","contact","id","name","email","CardList","console","log","contacts","map","SearchBar","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredContacts","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAEaA,G,YAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,aCFlBC,G,MAAW,SAACR,GAIpB,OAFDS,QAAQC,IAAIV,GAGR,qBAAKC,UAAU,YAAf,SAEQD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCX1BQ,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAErC,OACI,uBACIC,KAAK,SACLf,UAAU,eACVa,YAAaA,EACbG,SAAUF,MCyCPG,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhBtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,gEAYO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAOnC,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UAEE,iDACA,cAAC,EAAD,CACEa,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAtCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.44d98083.chunk.js","sourcesContent":["import React from 'react';\nimport './card.css';\nexport const Card = (props) => {\n\n    return(\n        <div className=\"card\">\n            <img alt=\"profile\" src={`https://robohash.org/${props.contact.id}?set=set5`}/>\n            <h2>{ props.contact.name }</h2>\n            <p>{ props.contact.email }</p>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { Card } from '../card/card';\n\nimport './card-list.css'\n\nexport const CardList = (props) => {\n\n    console.log(props);\n\n     return(\n        <div className=\"card-list\">\n            {\n                props.contacts.map(contact => (\n                    <Card key={contact.id} contact={contact} />\n                ))\n            }\n\n        </div>\n    )   \n}","import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = ({ placeholder, handleChange }) => {\n\n    return (\n        <input \n            type=\"search\" \n            className=\"search-field\" \n            placeholder={placeholder} \n            onChange={handleChange}\n        />\n    )\n}","import { Component } from 'react';\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBar } from './components/search-bar/search-bar';\nclass App extends Component {\n\n  constructor() {\n    super();\n    \n    this.state = {\n      contacts: [],\n      searchField: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  // calls as soon as this component is rendered\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ contacts: users }))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { contacts, searchField } = this.state;\n    const filteredContacts = contacts.filter(contact => \n      contact.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return(\n      <div className=\"App\">\n\n        <h1>Contact Rolodex</h1>\n        <SearchBar \n          placeholder=\"Search rolodex\" \n          handleChange={this.handleChange}\n        />\n        <CardList contacts={filteredContacts} /> \n\n      </div>\n    );\n\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}